[["peak-calling-and-motif-analysis.html", "Chapter 7 Peak calling and Motif analysis 7.1 Linkage plot 7.2 Call peaks using MACS2 7.3 Motif analysis", " Chapter 7 Peak calling and Motif analysis 7.1 Linkage plot DefaultAssay(pbmc) &lt;- &quot;ATAC&quot; # first compute the GC content for each peak pbmc &lt;- RegionStats(pbmc, genome = BSgenome.Hsapiens.UCSC.hg38) # link peaks to genes pbmc &lt;- LinkPeaks( object = pbmc, peak.assay = &quot;ATAC&quot;, expression.assay = &quot;RNA&quot;, genes.use = c(&quot;LYZ&quot;, &quot;MS4A1&quot;) ) Figure 7.1: Linkage plot for gene MS4A1 and LYZ 7.2 Call peaks using MACS2 Need to install MACS2 in advance pip install MACS2. Recall peaks by celltype. Peak calling can be performed using the CallPeaks() function, and can either be done separately for different groups of cells, or performed using data from all the cells. To call peaks on each annotated cell type, we can use the group.by argument: # this could take a long time because it runs for each cell type peaks &lt;- CallPeaks( object = pbmc, group.by = &quot;predicted.celltype.l2&quot; ) 7.3 Motif analysis Adding motif information to the Seurat object To add the DNA sequence motif information required for motif analyses, we can run the AddMotifs() function: # add motif information library(TFBSTools) library(JASPAR2020) library(BSgenome.Hsapiens.UCSC.hg38) library(BiocParallel) library(motifmatchr) register(SerialParam()) pfm &lt;- getMatrixSet( x = JASPAR2020, opts = list(species = 9606, all_versions = FALSE) ) pbmc &lt;- AddMotifs( object = pbmc, genome = BSgenome.Hsapiens.UCSC.hg38, pfm = pfm, assay = &quot;ATAC&quot;, verbose = TRUE ) #pbmc[[&quot;ATAC&quot;]]@motifs To identify potentially important cell-type-specific regulatory sequences, we can search for DNA motifs that are overrepresented in a set of peaks that are differentially accessible between cell types. Here, we find differentially accessible peaks between Pvalb and Sst inhibitory interneurons. For sparse data (such as scATAC-seq), we find it is often necessary to lower the min.pct threshold in FindMarkers() from the default (0.1, which was designed for scRNA-seq data). We then perform a hypergeometric test to test the probability of observing the motif at the given frequency by chance, comparing with a background set of peaks matched for GC content. da_peaks &lt;- FindMarkers( object = pbmc, ident.1 = &#39;CD8 TEM&#39;, ident.2 = &#39;B memory&#39;, only.pos = TRUE, test.use = &#39;LR&#39;, min.pct = 0.05, latent.vars = &#39;nCount_ATAC&#39; ) # get top differentially accessible peaks top.da.peak &lt;- rownames(da_peaks[da_peaks$p_val &lt; 0.005 &amp; da_peaks$pct.1 &gt; 0.2, ]) # test enrichment enriched.motifs &lt;- FindMotifs( object = pbmc, features = top.da.peak ) We can also plot the position weight matrices for the motifs, so we can visualize the different motif sequences. MotifPlot( object = pbmc, motifs = head(rownames(enriched.motifs)) ) ## Warning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use &quot;none&quot; instead as ## of ggplot2 3.3.4. ## â„¹ The deprecated feature was likely used in the ggseqlogo package. ## Please report the issue at &lt;https://github.com/omarwagih/ggseqlogo/issues&gt;. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. Figure 7.2: Motifs saveRDS(pbmc,file=&quot;pbmc_motif.rds&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
