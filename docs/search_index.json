[["normalization-and-cell-cycle-correction.html", "Chapter 4 Normalization and cell cycle correction 4.1 Normalization 4.2 Cell cycle correction and scale data", " Chapter 4 Normalization and cell cycle correction Continue from last checkpoint: pbmc&lt;-readRDS(&quot;pbmc_qc.rds&quot;) 4.1 Normalization Need to be performed normalization on “RNA” and “ATAC” assays separately. # RNA analysis DefaultAssay(pbmc) &lt;- &quot;RNA&quot; pbmc&lt;-NormalizeData(object = pbmc, normalization.method = &quot;LogNormalize&quot;, scale.factor = 1000000) # ATAC analysis # We exclude the first dimension as this is typically correlated with sequencing depth DefaultAssay(pbmc) &lt;- &quot;ATAC&quot; pbmc &lt;- RunTFIDF(pbmc) 4.2 Cell cycle correction and scale data Need to normalize data first before calculating cell cycle score. Assign cell cycles based on cell cycle score. DefaultAssay(pbmc) &lt;- &quot;RNA&quot; pbmc&lt;-NormalizeData(pbmc) # Cell cycle scoring s.genes &lt;- cc.genes$s.genes ## cc.genes is in Seurat package g2m.genes &lt;- cc.genes$g2m.genes pbmc &lt;- CellCycleScoring(pbmc, s.features = s.genes, g2m.features = g2m.genes, set.ident = F) unique(pbmc@meta.data$Phase) # [1] &quot;G2M&quot; &quot;S&quot; &quot;G1&quot; Scale data and regress out unwanted variations. You might want to skip the step that regress out variables because it requires huge CPU memory and long time. ## regress out unwanted variations pbmc@meta.data$CC.Difference &lt;- pbmc@meta.data$S.Score - pbmc@meta.data$G2M.Score # Note: this might take one hour if you request few CPU cores. pbmc &lt;- ScaleData(object = pbmc, vars.to.regress = c(&quot;nCount_RNA&quot;, &quot;percent.mt&quot;, &quot;CC.Difference&quot;)) # you can proceed without regressing out unwanted variations pbmc &lt;- ScaleData(object = pbmc) # also, the normalization and scaling can be combined into a single run using &quot;SCTransform&quot; pbmc&lt;-SCTransform(pbmc, vars.to.regress =c(&quot;percent.mt&quot;,&quot;nCount_RNA&quot;,&quot;CC.Difference&quot;),return.only.var.genes = TRUE, verbose = FALSE) # default: return.only.var.genes = TRUE, can change to FALSE if you want to keep all genes for other use. Saving checkpoint… saveRDS(pbmc,file=&quot;pbmc_norm.rds&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
